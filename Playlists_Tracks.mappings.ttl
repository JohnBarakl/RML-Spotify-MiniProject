@prefix rr:     <http://www.w3.org/ns/r2rml#>.
@prefix rml:    <http://semweb.mmlab.be/ns/rml#>.
@prefix ql:     <http://semweb.mmlab.be/ns/ql#>.
@prefix xsd:    <http://www.w3.org/2001/XMLSchema#>.
@prefix rdfs:   <http://www.w3.org/2000/01/rdf-schema#>.
@prefix schema: <http://schema.org/> .
@prefix dc:     <http://purl.org/dc/terms/>.
@prefix owl:    <http://www.w3.org/2002/07/owl#> .
@prefix spoto:  <https://raw.githubusercontent.com/JohnBarakl/RML-Spotify-MiniProject/refs/heads/main/SpotifyOntology.ttl#> .

@base <https://raw.githubusercontent.com/JohnBarakl/RML-Spotify-MiniProject/refs/heads/main/TracksTriplets.ttl#>.

<#TrackMapping2>
    a                     rr:TriplesMap ;
    rml:logicalSource     [ rml:source               "Playlists_Tracks.csv" ;
                            rml:referenceFormulation ql:CSV ] ;
    rr:subjectMap         [ rml:reference "track_uri" ;
                            rr:class      spoto:SpotifyTrack ] ;
    rr:predicateObjectMap [ rr:predicate spoto:trackName ;
                            rr:objectMap [ rml:reference "name" ;
                                           rr:datatype   xsd:string ] ] ;
    rr:predicateObjectMap [ rr:predicate spoto:TEMPisPartOf ;
                            rr:objectMap [ rml:reference "playlist_uris" ] ] ;
    # Temporarily just dump the artist ids list. Will be fixed later by RDF4J.
    rr:predicateObjectMap [ rr:predicate spoto:TEMPmadeBy ;
                            rr:objectMap [ rml:reference "artist_uris" ; ] ] ;
    # Temporarily just dump the artist names. Will be fixed later by RDF4J.
    rr:predicateObjectMap [ rr:predicate spoto:TEMPmadeByName ;
                            rr:objectMap [ rml:reference "artist_names" ; ] ] ;
    rr:predicateObjectMap [ rr:predicate spoto:releaseDate ;
                            rr:objectMap [ rml:reference "release_date" ;
                                           rr:datatype   xsd:date ] ] ;
.
